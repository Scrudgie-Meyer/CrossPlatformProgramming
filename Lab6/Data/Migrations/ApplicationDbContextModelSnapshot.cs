// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab6.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Lab6.Data.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerOtherDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerAddress = "123 Main St",
                            CustomerCode = "C001",
                            CustomerName = "John Doe",
                            CustomerOtherDetails = "Regular customer"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerAddress = "456 Oak St",
                            CustomerCode = "C002",
                            CustomerName = "Jane Smith",
                            CustomerOtherDetails = "VIP customer"
                        });
                });

            modelBuilder.Entity("Lab6.Data.Entities.CustomerGameRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RentalAmountDue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RentalDateOut")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RentalDateReturned")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GameId");

                    b.ToTable("CustomerGameRentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            GameId = 1,
                            RentalAmountDue = 9.99m,
                            RentalDateOut = new DateTime(2024, 11, 12, 0, 1, 30, 445, DateTimeKind.Local).AddTicks(9954),
                            RentalDateReturned = new DateTime(2024, 11, 15, 0, 1, 30, 445, DateTimeKind.Local).AddTicks(9956)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            GameId = 2,
                            RentalAmountDue = 5.99m,
                            RentalDateOut = new DateTime(2024, 11, 20, 0, 1, 30, 445, DateTimeKind.Local).AddTicks(9961),
                            RentalDateReturned = new DateTime(2024, 11, 21, 0, 1, 30, 445, DateTimeKind.Local).AddTicks(9962)
                        });
                });

            modelBuilder.Entity("Lab6.Data.Entities.CustomerMovieRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RentalAmountDue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RentalDateOut")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RentalDateReturned")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MovieId");

                    b.ToTable("CustomerMovieRentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            MovieId = 1,
                            RentalAmountDue = 4.99m,
                            RentalDateOut = new DateTime(2024, 11, 17, 0, 1, 30, 445, DateTimeKind.Local).AddTicks(9870),
                            RentalDateReturned = new DateTime(2024, 11, 20, 0, 1, 30, 445, DateTimeKind.Local).AddTicks(9926)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            MovieId = 2,
                            RentalAmountDue = 6.99m,
                            RentalDateOut = new DateTime(2024, 11, 19, 0, 1, 30, 445, DateTimeKind.Local).AddTicks(9932),
                            RentalDateReturned = new DateTime(2024, 11, 21, 0, 1, 30, 445, DateTimeKind.Local).AddTicks(9933)
                        });
                });

            modelBuilder.Entity("Lab6.Data.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameNumberInStock")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("GameRentalDailyRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            GameNumberInStock = 7,
                            GameRentalDailyRate = 3.99m,
                            GameTitle = "Halo"
                        },
                        new
                        {
                            Id = 2,
                            GameId = 2,
                            GameNumberInStock = 3,
                            GameRentalDailyRate = 2.99m,
                            GameTitle = "FIFA"
                        });
                });

            modelBuilder.Entity("Lab6.Data.Entities.Inventory", b =>
                {
                    b.Property<int>("InventoryItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InventoryItemDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InventoryItemTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventoryItemId");

                    b.HasIndex("InventoryItemTypeId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            InventoryItemId = 1,
                            InventoryItemDescription = "DVD - Inception",
                            InventoryItemTypeId = 1
                        },
                        new
                        {
                            InventoryItemId = 2,
                            InventoryItemDescription = "Blu-ray - The Matrix",
                            InventoryItemTypeId = 2
                        },
                        new
                        {
                            InventoryItemId = 3,
                            InventoryItemDescription = "Game Disc - Halo",
                            InventoryItemTypeId = 3
                        },
                        new
                        {
                            InventoryItemId = 4,
                            InventoryItemDescription = "Game Disc - FIFA",
                            InventoryItemTypeId = 3
                        });
                });

            modelBuilder.Entity("Lab6.Data.Entities.InventoryItemType", b =>
                {
                    b.Property<int>("InventoryItemTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InventoryItemTypeDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InventoryItemTypeId");

                    b.ToTable("InventoryItemTypes");

                    b.HasData(
                        new
                        {
                            InventoryItemTypeId = 1,
                            CustomerId = 0,
                            InventoryItemTypeDescription = "DVD"
                        },
                        new
                        {
                            InventoryItemTypeId = 2,
                            CustomerId = 0,
                            InventoryItemTypeDescription = "Blu-ray"
                        },
                        new
                        {
                            InventoryItemTypeId = 3,
                            CustomerId = 0,
                            InventoryItemTypeDescription = "Game Disc"
                        });
                });

            modelBuilder.Entity("Lab6.Data.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieNumberInStock")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MovieRentalDailyRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            MovieNumberInStock = 10,
                            MovieRentalDailyRate = 1.99m,
                            MovieTitle = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            MovieNumberInStock = 5,
                            MovieRentalDailyRate = 2.49m,
                            MovieTitle = "The Matrix"
                        });
                });

            modelBuilder.Entity("Lab6.Data.Entities.CustomerGameRental", b =>
                {
                    b.HasOne("Lab6.Data.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Data.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Lab6.Data.Entities.CustomerMovieRental", b =>
                {
                    b.HasOne("Lab6.Data.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Data.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Lab6.Data.Entities.Inventory", b =>
                {
                    b.HasOne("Lab6.Data.Entities.InventoryItemType", "InventoryItemType")
                        .WithMany()
                        .HasForeignKey("InventoryItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryItemType");
                });
#pragma warning restore 612, 618
        }
    }
}
